{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/item-edit-form/index.js","components/item-edit-form/item-edit-form.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","className","ItemEditForm","state","label","onLabelChange","e","setState","target","value","onEditClick","preventDefault","props","onItemEdited","id","this","onSubmit","type","onChange","Component","TodoListItem","onToggleDone","onDelete","onEdit","content","toEdit","onClick","TodoList","items","elements","map","item","itemProps","key","ItemAddForm","onItemAdded","placeholder","App","axios","get","then","response","createItem","catch","error","alert","idx","findIndex","slice","forEach","elem","index","data","text","length","important","done","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c65c472.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = () => {\n  return (\n    <div className=\"app-header\">\n      <h1>Todo List</h1>\n    </div>\n  );\n};\n\nexport default AppHeader;","import ItemEditForm from './item-edit-form';\n\nexport default ItemEditForm;\n","import React, { Component } from 'react';\n\nimport './item-edit-form.css';\n\nexport default class ItemEditForm extends Component {\n\n  state = {\n    label: ''\n  };\n\n  componentDidMount() {\n    this.setState({\n      label: this.props.label\n    })\n  }\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    })\n  };\n\n  onEditClick = (e) => {\n    e.preventDefault();\n    const { label } = this.state;\n    const cb = this.props.onItemEdited || (() => {});\n    cb(this.props.id, label);\n  };\n\n  render() {\n    return (\n      <form\n        className=\"center-panel d-flex\"\n        onSubmit={this.onEditClick}>\n\n        <input type=\"text\"\n               className=\"form-control edit-todo-label\"\n               value={this.state.label}\n               onChange={this.onLabelChange}\n        />\n\n        <button type=\"submit\"\n                className=\"btn btn-secondary\">Edit</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport './todo-list-item.css';\nimport ItemEditForm from \"../item-edit-form\";\n\nconst TodoListItem = ({ label, onToggleDone, onDelete, onEdit, toEdit }) => {\n\n  let content = label;\n  if (toEdit) {\n      content = <ItemEditForm />;\n  }\n\n  return (\n    <span className=\"todo-list-item\">\n      <span\n        className=\"todo-list-item-label\"\n        onClick={onToggleDone}>{content}</span>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-danger btn-sm float-right\"\n              onClick={onDelete}>\n        <i className=\"fa fa-trash-o\"> </i>\n      </button>\n\n      <button type=\"button\"\n              className=\"btn btn-outline-success btn-sm float-right\"\n              onClick={onEdit}>\n        <i className=\"fa fa-edit\"> </i>\n      </button>\n    </span>\n  );\n};\n\nexport default TodoListItem;","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/todo-list-item';\n\nimport './todo-list.css';\nimport ItemEditForm from \"../item-edit-form\";\n\nconst TodoList = ({ items, onDelete, onEdit, onItemEdited }) => {\n\n  const elements = items.map((item) => {\n    const { id, ...itemProps } = item;\n    if(item.toEdit){\n      return (\n          <li key={id} className=\"list-group-item\">\n            <ItemEditForm\n                {...item}\n                onItemEdited={onItemEdited}\n            />\n          </li>\n      )\n    }else{\n      return (\n          <li key={id} className=\"list-group-item\">\n            <TodoListItem\n                { ...itemProps }\n                onDelete={ () => onDelete(id) }\n                onEdit={ () => onEdit(id)}/>\n          </li>\n      );\n    }\n  });\n  return (<ul className=\"todo-list list-group\">{ elements }</ul>);\n};\n\nexport default TodoList;\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: ''\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    })\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { label } = this.state;\n    this.setState({ label: '' });\n    const cb = this.props.onItemAdded || (() => {});\n    cb(label);\n  };\n\n  render() {\n    return (\n        <form\n            className=\"bottom-panel d-flex\"\n            onSubmit={this.onSubmit}>\n\n          <input type=\"text\"\n                 className=\"form-control new-todo-label\"\n                 value={this.state.label}\n                 onChange={this.onLabelChange}\n                 placeholder=\"What needs to be done?\" />\n\n          <button type=\"submit\"\n                  className=\"btn btn-outline-secondary\">Add</button>\n        </form>\n    );\n  }\n}\n","import App from './app';\n\nexport default App;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport AppHeader from '../app-header';\nimport TodoList from '../todo-list';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\n\nexport default class App extends Component {\n\n  state = {\n    items: []\n  };\n\n  componentDidMount() {\n    axios.get(`/api/list-obj`)\n        .then(response => {\n          const items = response.data.map((elem) => ({label: elem.text, id: elem.id}));\n          this.setState({items});\n        }).catch(error => {\n          alert('Sorry, the server is unavailable :(');\n        });\n  }\n\n  onItemAdded = (label) => {\n    axios.get(`/api/add?text=${label}`)\n        .then(response => {\n          this.setState((state) => {\n            const item = this.createItem(label) ;\n            return { items: [...state.items, item] };\n          });\n        }).catch(error => {\n          alert('Sorry, the server is unavailable :(');\n        });\n  };\n\n  onItemEdited = ( id, label) => {\n    axios.get(`/api/edit?text=${label}&id=${id}`)\n        .then(response => {\n          this.setState((state) => {\n            const items = state.items.map((item) => {\n              if (item.id === id) {\n                item.label = label;\n                item.toEdit = false;\n              }\n              return item;\n            });\n            return { items };\n          });\n        }).catch(error => {\n            alert('Sorry, the server is unavailable :(');\n        });\n  };\n\n  onDelete = (id) => {\n    axios.get(`/api/delete?id=${id}`)\n        .then(response => {\n          this.setState((state) => {\n            const idx = state.items.findIndex((item) => item.id === id);\n            const items = [\n              ...state.items.slice(0, idx),\n              ...state.items.slice(idx + 1)\n            ];\n          items.forEach((elem, index) => {elem.id = index});\n          return { items };\n          });\n        }).catch(error => {\n          alert('Sorry, the server is unavailable :(');\n        });\n  };\n\n  onEdit = (id) => {\n    this.setState((state) => {\n      const items = state.items.map((item) => {\n        item.id === id ? item.toEdit = true : item.toEdit = false;\n        return item;\n      });\n      return  { items };\n    });\n  };\n\n  createItem(label) {\n    return {\n      id: this.state.items.length,\n      label,\n      important: false,\n      done: false\n    };\n  }\n\n  render() {\n    const { items } = this.state;\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader />\n\n        <TodoList\n          items={ items }\n          onDelete={this.onDelete}\n          onEdit={this.onEdit}\n          onItemEdited={this.onItemEdited}/>\n\n        <ItemAddForm\n          onItemAdded={this.onItemAdded} />\n      </div>\n    );\n  };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}